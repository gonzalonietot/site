{"remainingRequest":"/home/gonzalo/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/gonzalo/portfolio/src/components/Home.vue?vue&type=style&index=0&id=8dc7cce2&scoped=true&lang=css&","dependencies":[{"path":"/home/gonzalo/portfolio/src/components/Home.vue","mtime":1627611993220},{"path":"/home/gonzalo/portfolio/node_modules/css-loader/dist/cjs.js","mtime":1627609815522},{"path":"/home/gonzalo/portfolio/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1627609815856},{"path":"/home/gonzalo/portfolio/node_modules/postcss-loader/src/index.js","mtime":1627609815120},{"path":"/home/gonzalo/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":1627609801217},{"path":"/home/gonzalo/portfolio/node_modules/vue-loader/lib/index.js","mtime":1627609815856}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnZ1ZS10eXBlciB7CiAgLyogU3R5bGVzIGZvciB0aGUgdnVlLXR5cGVyIGNvbnRhaW5lcgogICAgIGUuZy4gZm9udC1mYW1pbHksIGZvbnQtc2l6ZSAgKi8KICBjb2xvcjogcmVkOwogIC5jdXN0b20uY2hhciB7CiAgICAvKiBTdHlsZXMgZm9yIGVhY2ggY2hhcmFjdGVyCiAgICAgICBlLmcuIGNvbG9yLCBiYWNrZ3JvdW5kLWNvbG9yICovCiAgICBjb2xvcjogcmVkOwogICAgYmFja2dyb3VuZC1jb2xvcjogcmVkOwoKICAgICYudHlwZWQgewogICAgICBjb2xvcjogcmVkOwogICAgICAvKiBTdHlsZXMgc3BlY2lmaWMgdG8gdHlwZWQgY2hhcmFjdGVycwogICAgICAgICBpLmUuIGNoYXJhY3RlcnMgdG8gdGhlIGxlZnQgb2YgdGhlIGNhcmV0ICovCiAgICB9CiAgICAmLnNlbGVjdGVkIHsKICAgICAgLyogU3R5bGVzIHNwZWNpZmljIHRvIHNlbGVjdGVkIGNoYXJhY3RlcnMKICAgICAgICAgaS5lLiBjaGFyYWN0ZXJzIHRvIHRoZSByaWdodCBvZiB0aGUgY2FyZXQgd2hpbGUgVnVlVHlwZXIncwogICAgICAgICAgICAgICdlcmFzZVN0eWxlJyBpcyBzZXQgdG8gYSBzZWxlY3Rpb24tYmFzZWQgc3R5bGUgKi8KICAgICAgY29sb3I6IHJlZDsKICAgIH0KICAgICYuZXJhc2VkIHsKICAgICAgLyogU3R5bGVzIHNwZWNpZmljIHRvIGVyYXNlZCBjaGFyYWN0ZXJzCiAgICAgICAgIGkuZS4gY2hhcmFjdGVycyB0byB0aGUgcmlnaHQgb2YgdGhlIGNhcmV0IHdoaWxlIFZ1ZVR5cGVyJ3MKICAgICAgICAgICAgICAnZXJhc2VTdHlsZScgaXMgc2V0IHRvIGEgbm9uLXNlbGVjdGlvbi1iYXNlZCBzdHlsZSAqLwogICAgICBjb2xvcjogcmVkOwogICAgfQogIH0KCiAgLmN1c3RvbS5jYXJldCB7CiAgICBjb2xvcjogcmVkOwogICAgLyogU3R5bGVzIGZvciB0aGUgY2FyZXQKICAgICAgIGUuZy4gYmFja2dyb3VuZC1jb2xvciwgYW5pbWF0aW9uLCBkaXNwbGF5ICovCgogICAgJi5wcmUtdHlwZSB7CiAgICAgIC8qIFN0eWxlcyBmb3IgdGhlIGNhcmV0IHdoZW4gaXQgaXMgaWRsZSBiZWZvcmUgdHlwaW5nCiAgICAgICAgIGkuZS4gYmVmb3JlIGEgc3RyaW5nIHN0YXJ0cyBiZWluZyB0eXBlZCwgZHVyaW5nICdwcmVUeXBlRGVsYXknICovCiAgICB9CiAgICAmLnByZS1lcmFzZSB7CiAgICAgIC8qIFN0eWxlcyBmb3IgdGhlIGNhcmV0IHdoZW4gaXQgaXMgaWRsZSBiZWZvcmUgZXJhc2luZwogICAgICAgICBpLmUuIGJlZm9yZSBhIHN0cmluZyBzdGFydHMgYmVpbmcgZXJhc2VkLCBkdXJpbmcgJ3ByZUVyYXNlRGVsYXknICovCiAgICB9CiAgICAmLmlkbGUgewogICAgICAvKiBTdHlsZXMgZm9yIHRoZSBjYXJldCB3aGVuIGl0IGlzIGlkbGUsIGJ1dCBWdWVUeXBlciBoYXMgbm90IHlldCBjb21wbGV0ZWQgdHlwaW5nCiAgICAgICAgIGkuZS4gd2hlbiAncHJlLXR5cGUnIG9yICdwcmUtZXJhc2UnIGlzIHNldCwgYnV0IG5vdCAnY29tcGxldGUnICovCiAgICB9CiAgICAmLnR5cGluZyB7CiAgICAgIC8qIFN0eWxlcyBmb3IgdGhlIGNhcmV0IHdoaWxlIFZ1ZVR5cGVyIGlzIHR5cGluZwogICAgICAgICBpLmUuIHdoZW4gdGhlIGNhcmV0IGlzIG1vdmluZyBmb3J3YXJkcyAqLwogICAgfQogICAgJi5zZWxlY3RpbmcgewogICAgICAvKiBTdHlsZXMgZm9yIHRoZSBjYXJldCB3aGlsZSBWdWVUeXBlciBpcyBzZWxlY3RpbmcKICAgICAgICAgaS5lLiB3aGVuIHRoZSBjYXJldCBpcyBtb3ZpbmcgYmFja3dhcmRzIGFuZCAnZXJhc2VTdHlsZScgaXMKICAgICAgICAgc2V0IHRvIGEgc2VsZWN0aW9uLWJhc2VkIHN0eWxlICovCiAgICB9CiAgICAmLmVyYXNpbmcgewogICAgICAvKiBTdHlsZXMgZm9yIHRoZSBjYXJldCB3aGlsZSBWdWVUeXBlciBpcyBlcmFzaW5nCiAgICAgICAgIGkuZS4gd2hlbiB0aGUgY2FyZXQgaXMgbW92aW5nIGJhY2t3YXJkcyBhbmQgJ2VyYXNlU3R5bGUnIGlzCiAgICAgICAgIHNldCB0byBhIG5vbi1zZWxlY3Rpb24tYmFzZWQgc3R5bGUgKi8KICAgIH0KICAgICYuY29tcGxldGUgewogICAgICAvKiBTdHlsZXMgZm9yIHRoZSBpZGxlIGNhcmV0IHdoZW4gVnVlVHlwZXIgaGFzIGZpbmlzaGVkIGFsbCB0eXBpbmcvZXJhc2luZyAqLwogICAgfQogIH0KfQo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <vue-typer :text=words\n               :repeat='Infinity'\n               :shuffle='true'\n               initial-action='erasing'\n               :pre-type-delay='40'\n               :type-delay='40'\n               :pre-erase-delay='2000'\n               :erase-delay='250'\n               erase-style='backspace'\n               :erase-on-complete='true'\n               caret-animation='blink' />\n  </div>\n</template>\n\n<script>\nimport { VueTyper } from \"vue-typer\";\nexport default {\n  name: 'Home',\n  components: {\n    VueTyper,\n  },\n  data() {\n    return {\n      words: [\"I'm Gonzalo Nieto.\",\"I'm a Software Developer.\",\"I write code.\"]\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"css\">\n\n.vue-typer {\n  /* Styles for the vue-typer container\n     e.g. font-family, font-size  */\n  color: red;\n  .custom.char {\n    /* Styles for each character\n       e.g. color, background-color */\n    color: red;\n    background-color: red;\n\n    &.typed {\n      color: red;\n      /* Styles specific to typed characters\n         i.e. characters to the left of the caret */\n    }\n    &.selected {\n      /* Styles specific to selected characters\n         i.e. characters to the right of the caret while VueTyper's\n              'eraseStyle' is set to a selection-based style */\n      color: red;\n    }\n    &.erased {\n      /* Styles specific to erased characters\n         i.e. characters to the right of the caret while VueTyper's\n              'eraseStyle' is set to a non-selection-based style */\n      color: red;\n    }\n  }\n\n  .custom.caret {\n    color: red;\n    /* Styles for the caret\n       e.g. background-color, animation, display */\n\n    &.pre-type {\n      /* Styles for the caret when it is idle before typing\n         i.e. before a string starts being typed, during 'preTypeDelay' */\n    }\n    &.pre-erase {\n      /* Styles for the caret when it is idle before erasing\n         i.e. before a string starts being erased, during 'preEraseDelay' */\n    }\n    &.idle {\n      /* Styles for the caret when it is idle, but VueTyper has not yet completed typing\n         i.e. when 'pre-type' or 'pre-erase' is set, but not 'complete' */\n    }\n    &.typing {\n      /* Styles for the caret while VueTyper is typing\n         i.e. when the caret is moving forwards */\n    }\n    &.selecting {\n      /* Styles for the caret while VueTyper is selecting\n         i.e. when the caret is moving backwards and 'eraseStyle' is\n         set to a selection-based style */\n    }\n    &.erasing {\n      /* Styles for the caret while VueTyper is erasing\n         i.e. when the caret is moving backwards and 'eraseStyle' is\n         set to a non-selection-based style */\n    }\n    &.complete {\n      /* Styles for the idle caret when VueTyper has finished all typing/erasing */\n    }\n  }\n}\n</style>\n"]}]}